# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      
      # すべてのターゲットで警告とエラーを無効化
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      config.build_settings['WARNING_CFLAGS'] = '$(inherited) -w'
      config.build_settings['OTHER_CFLAGS'] = '$(inherited) -w'
      
      # BoringSSL-GRPC の -G オプションエラー修正
      if target.name == 'BoringSSL-GRPC'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings.delete('GCC_GENERATE_DEBUGGING_SYMBOLS')
        config.build_settings.delete('DEBUG_INFORMATION_FORMAT')
        config.build_settings['GCC_GENERATE_DEBUGGING_SYMBOLS'] = 'NO'
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf'
        # -G オプションを完全に除去
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -w -O0'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) NDEBUG=1'
        
        # x86_64シミュレーター対応でCFLAGSから-Gオプションを除去
        current_cflags = config.build_settings['OTHER_CFLAGS'] || ''
        config.build_settings['OTHER_CFLAGS'] = current_cflags.gsub(/-G\s*\w*/, '').strip
        
        # シミュレーター固有のフラグ追加
        config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
      end
      
      # gRPC 関連すべての設定を調整
      if target.name.include?('gRPC') || target.name.include?('grpc')
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
        config.build_settings['GCC_GENERATE_DEBUGGING_SYMBOLS'] = 'NO'
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf'
      end
      
      # abseil 設定調整
      if target.name == 'abseil'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
      end
    end
  end
end
